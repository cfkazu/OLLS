use bevy::{window::WindowTheme, transform::commands};

use num_derive::FromPrimitive;    
use num_traits::FromPrimitive;
use crate::{prelude::*, GRID_NUM};
use tiled::{Loader, TileLayer, FiniteTileLayer, FiniteTileLayerData};
#[derive(Copy, Clone, PartialEq,FromPrimitive)]
#[repr(usize)]
pub enum TileType {
    Glass1,
    Glass2,
    Glass3,
    Glass4,
    Glass5,
    Glass6,
    Glass7,
    Glass8,
    Glass9,
    Glass10,
    Glass11,
    GlassRock,
    Ground1,
    Ground2,
    Void1,
    Void2,
    Sand1,
    Sand2,
    Sand3,
    Sand4,
    SandGlass1,
    SandGlass2,
    SandGlass3,
    WhiteSand1,
    WhiteSand2,
    WhiteSand3,
    WhiteSand4,
    WhiteSand5,
    WhiteSand6,
    Road1,
    HayTate,
    HayYoko,
    Void3,

    DarkGrass1,
    DarkGrass2,
    DarkGrass3,
    DarkGrass4,
    Wasteland,
    DraySoil1,
    DraySoil2,
    DraySoil3,
    DraySoil4,
    DraySoil5,
    Concrete,
    Green1,
    Snow1,
    Snow2,
    Snow3,
    Snow4,
    Snow5,
    Snow6,
    Snow7,
    Snow8,
    SnowHayTate,
    SnowHayYoko,
    SnowLake,
    Snow9,
    Snow10,
    SnowTree1,
    SnowTree2,
    SnowBlueTile,
    SnowRock1,
    SnowRock2,
    SnowRock3,
    SnowRock4,
    SnowStair,

    Heat1,
    Heat2,
    Heat3,
    IronTable,
    WoodenFloor1,
    WoodenFloor2,
    WoodenFloor3,
    HayFloor1,
    HayFloor2,
    HayFloor3,
    BrownConcrete,
    Wara,
    HibiTile,
    BrueTile,
    Icetile,
    RoadTile,
    SnowFlower1,
    SnowFlower2,
    SnowFlower3,
    SnowGrass1,
    SnowGrass2,
    SnowGrass3,
    SnowGrass4,
    SnowRock5,
    SnowRock6,
    Snow11,
    Snow12,
    Snow13,
    FlowerGarden1,
    FlowerGarden2,
    FlowerGarden3,
    Void4,
    SnowPillar,

    BlownFloor,
    SilverFloor,
    BronzeFloor,
    BlueFloor,
    RockFloor1,
    RockFloor2,
    RockFloor3,
    RockFloor4,
    RockFloor5,
    RockFloor6,
    RockFloor7,
    RockFloor8,
    RockFloor9,
    RockFloor10,
    RockFloor11,
    Ido,
    Roof1,
    WhiteFloor,
    BronzeFloor2,
    BronzeFloor3,
    RockFloor12,
    RockFloor13,
    RockFloor14,
    RockFloor15,
    KasekiFloor1,
    KasekiFloor2,
    KasekiFloor3,
    KasekiFloor4,
    KasekiFloor5,
    KasekiFloor6,
    KasekiFloor7,
    KasekiFloor8,
    KasekiFloor9,

    Tilex0,
Tilex1,
Tilex2,
Tilex3,
Tilex4,
Tilex5,
Tilex6,
Tilex7,
Tilex8,
Tilex9,
Tilex10,
Tilex11,
Tilex12,
Tilex13,
Tilex14,
Tilex15,
Tilex16,
Tilex17,
Tilex18,
Tilex19,
Tilex20,
Tilex21,
Tilex22,
Tilex23,
Tilex24,
Tilex25,
Tilex26,
Tilex27,
Tilex28,
Tilex29,
Tilex30,
Tilex31,
Tilex32,
Tilex33,
Tilex34,
Tilex35,
Tilex36,
Tilex37,
Tilex38,
Tilex39,
Tilex40,
Tilex41,
Tilex42,
Tilex43,
Tilex44,
Tilex45,
Tilex46,
Tilex47,
Tilex48,
Tilex49,
Tilex50,
Tilex51,
Tilex52,
Tilex53,
Tilex54,
Tilex55,
Tilex56,
Tilex57,
Tilex58,
Tilex59,
Tilex60,
Tilex61,
Tilex62,
Tilex63,
Tilex64,
Tilex65,
Tilex66,
Tilex67,
Tilex68,
Tilex69,
Tilex70,
Tilex71,
Tilex72,
Tilex73,
Tilex74,
Tilex75,
Tilex76,
Tilex77,
Tilex78,
Tilex79,
Tilex80,
Tilex81,
Tilex82,
Tilex83,
Tilex84,
Tilex85,
Tilex86,
Tilex87,
Tilex88,
Tilex89,
Tilex90,
Tilex91,
Tilex92,
Tilex93,
Tilex94,
Tilex95,
Tilex96,
Tilex97,
Tilex98,
Tilex99,
Tilex100,
Tilex101,
Tilex102,
Tilex103,
Tilex104,
Tilex105,
Tilex106,
Tilex107,
Tilex108,
Tilex109,
Tilex110,
Tilex111,
Tilex112,
Tilex113,
Tilex114,
Tilex115,
Tilex116,
Tilex117,
Tilex118,
Tilex119,
Tilex120,
Tilex121,
Tilex122,
Tilex123,
Tilex124,
Tilex125,
Tilex126,
Tilex127,
Tilex128,
Tilex129,
Tilex130,
Tilex131,
Tilex132,
Tilex133,
Tilex134,
Tilex135,
Tilex136,
Tilex137,
Tilex138,
Tilex139,
Tilex140,
Tilex141,
Tilex142,
Tilex143,
Tilex144,
Tilex145,
Tilex146,
Tilex147,
Tilex148,
Tilex149,
Tilex150,
Tilex151,
Tilex152,
Tilex153,
Tilex154,
Tilex155,
Tilex156,
Tilex157,
Tilex158,
Tilex159,
Tilex160,
Tilex161,
Tilex162,
Tilex163,
Tilex164,
Tilex165,
Tilex166,
Tilex167,
Tilex168,
Tilex169,
Tilex170,
Tilex171,
Tilex172,
Tilex173,
Tilex174,
Tilex175,
Tilex176,
Tilex177,
Tilex178,
Tilex179,
Tilex180,
Tilex181,
Tilex182,
Tilex183,
Tilex184,
Tilex185,
Tilex186,
Tilex187,
Tilex188,
Tilex189,
Tilex190,
Tilex191,
Tilex192,
Tilex193,
Tilex194,
Tilex195,
Tilex196,
Tilex197,
Tilex198,
Tilex199,
Tilex200,
Tilex201,
Tilex202,
Tilex203,
Tilex204,
Tilex205,
Tilex206,
Tilex207,
Tilex208,
Tilex209,
Tilex210,
Tilex211,
Tilex212,
Tilex213,
Tilex214,
Tilex215,
Tilex216,
Tilex217,
Tilex218,
Tilex219,
Tilex220,
Tilex221,
Tilex222,
Tilex223,
Tilex224,
Tilex225,
Tilex226,
Tilex227,
Tilex228,
Tilex229,
Tilex230,
Tilex231,
Tilex232,
Tilex233,
Tilex234,
Tilex235,
Tilex236,
Tilex237,
Tilex238,
Tilex239,
Tilex240,
Tilex241,
Tilex242,
Tilex243,
Tilex244,
Tilex245,
Tilex246,
Tilex247,
Tilex248,
Tilex249,
Tilex250,
Tilex251,
Tilex252,
Tilex253,
Tilex254,
Tilex255,
Tilex256,
Tilex257,
Tilex258,
Tilex259,
Tilex260,
Tilex261,
Tilex262,
Tilex263,
Tilex264,
Tilex265,
Tilex266,
Tilex267,
Tilex268,
Tilex269,
Tilex270,
Tilex271,
Tilex272,
Tilex273,
Tilex274,
Tilex275,
Tilex276,
Tilex277,
Tilex278,
Tilex279,
Tilex280,
Tilex281,
Tilex282,
Tilex283,
Tilex284,
Tilex285,
Tilex286,
Tilex287,
Tilex288,
Tilex289,
Tilex290,
Tilex291,
Tilex292,
Tilex293,
Tilex294,
Tilex295,
Tilex296,
Tilex297,
Tilex298,
Tilex299,
Tilex300,
Tilex301,
Tilex302,
Tilex303,
Tilex304,
Tilex305,
Tilex306,
Tilex307,
Tilex308,
Tilex309,
Tilex310,
Tilex311,
Tilex312,
Tilex313,
Tilex314,
Tilex315,
Tilex316,
Tilex317,
Tilex318,
Tilex319,
Tilex320,
Tilex321,
Tilex322,
Tilex323,
Tilex324,
Tilex325,
Tilex326,
Tilex327,
Tilex328,
Tilex329,
Tilex330,
Tilex331,
Tilex332,
Tilex333,
Tilex334,
Tilex335,
Tilex336,
Tilex337,
Tilex338,
Tilex339,
Tilex340,
Tilex341,
Tilex342,
Tilex343,
Tilex344,
Tilex345,
Tilex346,
Tilex347,
Tilex348,
Tilex349,
Tilex350,
Tilex351,
Tilex352,
Tilex353,
Tilex354,
Tilex355,
Tilex356,
Tilex357,
Tilex358,
Tilex359,
Tilex360,
Tilex361,
Tilex362,
Tilex363,
Tilex364,
Tilex365,
Tilex366,
Tilex367,
Tilex368,
Tilex369,
Tilex370,
Tilex371,
Tilex372,
Tilex373,
Tilex374,
Tilex375,
Tilex376,
Tilex377,
Tilex378,
Tilex379,
Tilex380,
Tilex381,
Tilex382,
Tilex383,
Tilex384,
Tilex385,
Tilex386,
Tilex387,
Tilex388,
Tilex389,
Tilex390,
Tilex391,
Tilex392,
Tilex393,
Tilex394,
Tilex395,
Tilex396,
Tilex397,
Tilex398,
Tilex399,
Tilex400,
Tilex401,
Tilex402,
Tilex403,
Tilex404,
Tilex405,
Tilex406,
Tilex407,
Tilex408,
Tilex409,
Tilex410,
Tilex411,
Tilex412,
Tilex413,
Tilex414,
Tilex415,
Tilex416,
Tilex417,
Tilex418,
Tilex419,
Tilex420,
Tilex421,
Tilex422,
Tilex423,
Tilex424,
Tilex425,
Tilex426,
Tilex427,
Tilex428,
Tilex429,
Tilex430,
Tilex431,
Tilex432,
Tilex433,
Tilex434,
Tilex435,
Tilex436,
Tilex437,
Tilex438,
Tilex439,
Tilex440,
Tilex441,
Tilex442,
Tilex443,
Tilex444,
Tilex445,
Tilex446,
Tilex447,
Tilex448,
Tilex449,
Tilex450,
Tilex451,
Tilex452,
Tilex453,
Tilex454,
Tilex455,
Tilex456,
Tilex457,
Tilex458,
Tilex459,
Tilex460,
Tilex461,
Tilex462,
Tilex463,
Tilex464,
Tilex465,
Tilex466,
Tilex467,
Tilex468,
Tilex469,
Tilex470,
Tilex471,
Tilex472,
Tilex473,
Tilex474,
Tilex475,
Tilex476,
Tilex477,
Tilex478,
Tilex479,
Tilex480,
Tilex481,
Tilex482,
Tilex483,
Tilex484,
Tilex485,
Tilex486,
Tilex487,
Tilex488,
Tilex489,
Tilex490,
Tilex491,
Tilex492,
Tilex493,
Tilex494,
Tilex495,
Tilex496,
Tilex497,
Tilex498,
Tilex499,
Tilex500,
Tilex501,
Tilex502,
Tilex503,
Tilex504,
Tilex505,
Tilex506,
Tilex507,
Tilex508,
Tilex509,
Tilex510,
Tilex511,
Tilex512,
Tilex513,
Tilex514,
Tilex515,
Tilex516,
Tilex517,
Tilex518,
Tilex519,
Tilex520,
Tilex521,
Tilex522,
Tilex523,
Tilex524,
Tilex525,
Tilex526,
Tilex527,
Tilex528,
Tilex529,
Tilex530,
Tilex531,
Tilex532,
Tilex533,
Tilex534,
Tilex535,
Tilex536,
Tilex537,
Tilex538,
Tilex539,
Tilex540,
Tilex541,
Tilex542,
Tilex543,
Tilex544,
Tilex545,
Tilex546,
Tilex547,
Tilex548,
Tilex549,
Tilex550,
Tilex551,
Tilex552,
Tilex553,
Tilex554,
Tilex555,
Tilex556,
Tilex557,
Tilex558,
Tilex559,
Tilex560,
Tilex561,
Tilex562,
Tilex563,
Tilex564,
Tilex565,
Tilex566,
Tilex567,
Tilex568,
Tilex569,
Tilex570,
Tilex571,
Tilex572,
Tilex573,
Tilex574,
Tilex575,
Tilex576,
Tilex577,
Tilex578,
Tilex579,
Tilex580,
Tilex581,
Tilex582,
Tilex583,
Tilex584,
Tilex585,
Tilex586,
Tilex587,
Tilex588,
Tilex589,
Tilex590,
Tilex591,
Tilex592,
Tilex593,
Tilex594,
Tilex595,
Tilex596,
Tilex597,
Tilex598,
Tilex599,
Tilex600,
Tilex601,
Tilex602,
Tilex603,
Tilex604,
Tilex605,
Tilex606,
Tilex607,
Tilex608,
Tilex609,
Tilex610,
Tilex611,
Tilex612,
Tilex613,
Tilex614,
Tilex615,
Tilex616,
Tilex617,
Tilex618,
Tilex619,
Tilex620,
Tilex621,
Tilex622,
Tilex623,
Tilex624,
Tilex625,
Tilex626,
Tilex627,
Tilex628,
Tilex629,
Tilex630,
Tilex631,
Tilex632,
Tilex633,
Tilex634,
Tilex635,
Tilex636,
Tilex637,
Tilex638,
Tilex639,
Tilex640,
Tilex641,
Tilex642,
Tilex643,
Tilex644,
Tilex645,
Tilex646,
Tilex647,
Tilex648,
Tilex649,
Tilex650,
Tilex651,
Tilex652,
Tilex653,
Tilex654,
Tilex655,
Tilex656,
Tilex657,
Tilex658,
Tilex659,
Tilex660,
Tilex661,
Tilex662,
Tilex663,
Tilex664,
Tilex665,
Tilex666,
Tilex667,
Tilex668,
Tilex669,
Tilex670,
Tilex671,
Tilex672,
Tilex673,
Tilex674,
Tilex675,
Tilex676,
Tilex677,
Tilex678,
Tilex679,
Tilex680,
Tilex681,
Tilex682,
Tilex683,
Tilex684,
Tilex685,
Tilex686,
Tilex687,
Tilex688,
Tilex689,
Tilex690,
Tilex691,
Tilex692,
Tilex693,
Tilex694,
Tilex695,
Tilex696,
Tilex697,
Tilex698,
Tilex699,
Tilex700,
Tilex701,
Tilex702,
Tilex703,
Tilex704,
Tilex705,
Tilex706,
Tilex707,
Tilex708,
Tilex709,
Tilex710,
Tilex711,
Tilex712,
Tilex713,
Tilex714,
Tilex715,
Tilex716,
Tilex717,
Tilex718,
Tilex719,
Tilex720,
Tilex721,
Tilex722,
Tilex723,
Tilex724,
Tilex725,
Tilex726,
Tilex727,
Tilex728,
Tilex729,
Tilex730,
Tilex731,
Tilex732,
Tilex733,
Tilex734,
Tilex735,
Tilex736,
Tilex737,
Tilex738,
Tilex739,
Tilex740,
Tilex741,
Tilex742,
Tilex743,
Tilex744,
Tilex745,
Tilex746,
Tilex747,
Tilex748,
Tilex749,
Tilex750,
Tilex751,
Tilex752,
Tilex753,
Tilex754,
Tilex755,
Tilex756,
Tilex757,
Tilex758,
Tilex759,
Tilex760,
Tilex761,
Tilex762,
Tilex763,
Tilex764,
Tilex765,
Tilex766,
Tilex767,
Tilex768,
Tilex769,
Tilex770,
Tilex771,
Tilex772,
Tilex773,
Tilex774,
Tilex775,
Tilex776,
Tilex777,
Tilex778,
Tilex779,
Tilex780,
Tilex781,
Tilex782,
Tilex783,
Tilex784,
Tilex785,
Tilex786,
Tilex787,
Tilex788,
Tilex789,
Tilex790,
Tilex791,
Tilex792,
Tilex793,
Tilex794,
Tilex795,
Tilex796,
Tilex797,
Tilex798,
Tilex799,
Tilex800,
Tilex801,
Tilex802,
Tilex803,
Tilex804,
Tilex805,
Tilex806,
Tilex807,
Tilex808,
Tilex809,
Tilex810,
Tilex811,
Tilex812,
Tilex813,
Tilex814,
Tilex815,
Tilex816,
Tilex817,
Tilex818,
Tilex819,
Tilex820,
Tilex821,
Tilex822,
Tilex823,
Tilex824,
Tilex825,
Tilex826,
Tilex827,
Tilex828,
Tilex829,
Tilex830,
Tilex831,
Tilex832,
Tilex833,
Tilex834,
Tilex835,
Tilex836,
Tilex837,
Tilex838,
Tilex839,
Tilex840,
Tilex841,
Tilex842,
Tilex843,
Tilex844,
Tilex845,
Tilex846,
Tilex847,
Tilex848,
Tilex849,
Tilex850,
Tilex851,
Tilex852,
Tilex853,
Tilex854,
Tilex855,
Tilex856,
Tilex857,
Tilex858,
Tilex859,
Tilex860,
Tilex861,
Tilex862,
Tilex863,
Tilex864,
Tilex865,
Tilex866,
Tilex867,
Tilex868,
Tilex869,
Tilex870,
Tilex871,
Tilex872,
Tilex873,
Tilex874,
Tilex875,
Tilex876,
Tilex877,
Tilex878,
Tilex879,
Tilex880,
Tilex881,
Tilex882,
Tilex883,
Tilex884,
Tilex885,
Tilex886,
Tilex887,
Tilex888,
Tilex889,
Tilex890,
Tilex891,
Tilex892,
Tilex893,
Tilex894,
Tilex895,
Tilex896,
Tilex897,
Tilex898,
Tilex899,
Tilex900,
Tilex901,
Tilex902,
Tilex903,
Tilex904,
Tilex905,
Tilex906,
Tilex907,
Tilex908,
Tilex909,
Tilex910,
Tilex911,
Tilex912,
Tilex913,
Tilex914,
Tilex915,
Tilex916,
Tilex917,
Tilex918,
Tilex919,
Tilex920,
Tilex921,
Tilex922,
Tilex923,
Tilex924,
Tilex925,
Tilex926,
Tilex927,
Tilex928,
Tilex929,
Tilex930,
Tilex931,
Tilex932,
Tilex933,
Tilex934,
Tilex935,
Tilex936,
Tilex937,
Tilex938,
Tilex939,
Tilex940,
Tilex941,
Tilex942,
Tilex943,
Tilex944,
Tilex945,
Tilex946,
Tilex947,
Tilex948,
Tilex949,
Tilex950,
Tilex951,
Tilex952,
Tilex953,
Tilex954,
Tilex955,
Tilex956,
Tilex957,
Tilex958,
Tilex959,
Tilex960,
Tilex961,
Tilex962,
Tilex963,
Tilex964,
Tilex965,
Tilex966,
Tilex967,
Tilex968,
Tilex969,
Tilex970,
Tilex971,
Tilex972,
Tilex973,
Tilex974,
Tilex975,
Tilex976,
Tilex977,
Tilex978,
Tilex979,
Tilex980,
Tilex981,
Tilex982,
Tilex983,
Tilex984,
Tilex985,
Tilex986,
Tilex987,
Tilex988,
Tilex989,
Tilex990,
Tilex991,
Tilex992,
Tilex993,
Tilex994,
Tilex995,
Tilex996,
Tilex997,
Tilex998,
Tilex999,
Tilex1000,
Tilex1001,
Tilex1002,
Tilex1003,
Tilex1004,
Tilex1005,
Tilex1006,
Tilex1007,
Tilex1008,
Tilex1009,
Tilex1010,
Tilex1011,
Tilex1012,
Tilex1013,
Tilex1014,
Tilex1015,
Tilex1016,
Tilex1017,
Tilex1018,
Tilex1019,
Tilex1020,
Tilex1021,
Tilex1022,
Tilex1023,
Tilex1024,
Tilex1025,
Tilex1026,
Tilex1027,
Tilex1028,
Tilex1029,
Tilex1030,
Tilex1031,
Tilex1032,
Tilex1033,
Tilex1034,
Tilex1035,
Tilex1036,
Tilex1037,
Tilex1038,
Tilex1039,
Tilex1040,
Tilex1041,
Tilex1042,
Tilex1043,
Tilex1044,
Tilex1045,
Tilex1046,
Tilex1047,
Tilex1048,
Tilex1049,
Tilex1050,
Tilex1051,
Tilex1052,
Tilex1053,
Tilex1054,
Tilex1055,
Tilex1056,
Tilex1057,
Tilex1058,
Tilex1059,
Tilex1060,
Tilex1061,
Tilex1062,
Tilex1063,
Tilex1064,
Tilex1065,
Tilex1066,
Tilex1067,
Tilex1068,
Tilex1069,
Tilex1070,
Tilex1071,
Tilex1072,
Tilex1073,
Tilex1074,
Tilex1075,
Tilex1076,
Tilex1077,
Tilex1078,
Tilex1079,
Tilex1080,
Tilex1081,
Tilex1082,
Tilex1083,
Tilex1084,
Tilex1085,
Tilex1086,
Tilex1087,
Tilex1088,
Tilex1089,
Tilex1090,
Tilex1091,
Tilex1092,
Tilex1093,
Tilex1094,
Tilex1095,
Tilex1096,
Tilex1097,
Tilex1098,
Tilex1099,
Tilex1100,
Tilex1101,
Tilex1102,
Tilex1103,
Tilex1104,
Tilex1105,
Tilex1106,
Tilex1107,
Tilex1108,
Tilex1109,
Tilex1110,
Tilex1111,
Tilex1112,
Tilex1113,
Tilex1114,
Tilex1115,
Tilex1116,
Tilex1117,
Tilex1118,
Tilex1119,
Tilex1120,
Tilex1121,
Tilex1122,
Tilex1123,
Tilex1124,
Tilex1125,
Tilex1126,
Tilex1127,
Tilex1128,
Tilex1129,
Tilex1130,
Tilex1131,
Tilex1132,
Tilex1133,
Tilex1134,
Tilex1135,
Tilex1136,
Tilex1137,
Tilex1138,
Tilex1139,
Tilex1140,
Tilex1141,
Tilex1142,
Tilex1143,
Tilex1144,
Tilex1145,
Tilex1146,
Tilex1147,
Tilex1148,
Tilex1149,
Tilex1150,
Tilex1151,
Tilex1152,
Tilex1153,
Tilex1154,
Tilex1155,
Tilex1156,
Tilex1157,
Tilex1158,
Tilex1159,
Tilex1160,
Tilex1161,
Tilex1162,
Tilex1163,
Tilex1164,
Tilex1165,
Tilex1166,
Tilex1167,
Tilex1168,
Tilex1169,
Tilex1170,
Tilex1171,
Tilex1172,
Tilex1173,
Tilex1174,
Tilex1175,
Tilex1176,
Tilex1177,
Tilex1178,
Tilex1179,
Tilex1180,
Tilex1181,
Tilex1182,
Tilex1183,
Tilex1184,
Tilex1185,
Tilex1186,
Tilex1187,
Tilex1188,
Tilex1189,
Tilex1190,
Tilex1191,
Tilex1192,
Tilex1193,
Tilex1194,
Tilex1195,
Tilex1196,
Tilex1197,
Tilex1198,
Tilex1199,
Tilex1200,
Tilex1201,
Tilex1202,
Tilex1203,
Tilex1204,
Tilex1205,
Tilex1206,
Tilex1207,
Tilex1208,
Tilex1209,
Tilex1210,
Tilex1211,
Tilex1212,
Tilex1213,
Tilex1214,
Tilex1215,
Tilex1216,
Tilex1217,
Tilex1218,
Tilex1219,
Tilex1220,
Tilex1221,
Tilex1222,
Tilex1223,
Tilex1224,
Tilex1225,
Tilex1226,
Tilex1227,
Tilex1228,
Tilex1229,
Tilex1230,
Tilex1231,
Tilex1232,
Tilex1233,
Tilex1234,
Tilex1235,
Tilex1236,
Tilex1237,
Tilex1238,
Tilex1239,
Tilex1240,
Tilex1241,
Tilex1242,
Tilex1243,
Tilex1244,
Tilex1245,
Tilex1246,
Tilex1247,
Tilex1248,
Tilex1249,
Tilex1250,
Tilex1251,
Tilex1252,
Tilex1253,
Tilex1254,
Tilex1255,
Tilex1256,
Tilex1257,
Tilex1258,
Tilex1259,
Tilex1260,
Tilex1261,
Tilex1262,
Tilex1263,
Tilex1264,
Tilex1265,
Tilex1266,
Tilex1267,
Tilex1268,
Tilex1269,
Tilex1270,
Tilex1271,
Tilex1272,
Tilex1273,
Tilex1274,
Tilex1275,
Tilex1276,
Tilex1277,
Tilex1278,
Tilex1279,
Tilex1280,
Tilex1281,
Tilex1282,
Tilex1283,
Tilex1284,
Tilex1285,
Tilex1286,
Tilex1287,
Tilex1288,
Tilex1289,
Tilex1290,
Tilex1291,
Tilex1292,
Tilex1293,
Tilex1294,
Tilex1295,
Tilex1296,
Tilex1297,
Tilex1298,
Tilex1299,
Tilex1300,
Tilex1301,
Tilex1302,
Tilex1303,
Tilex1304,
Tilex1305,
Tilex1306,
Tilex1307,
Tilex1308,
Tilex1309,
Tilex1310,
Tilex1311,
Tilex1312,
Tilex1313,
Tilex1314,
Tilex1315,
Tilex1316,
Tilex1317,
Tilex1318,
Tilex1319,
Tilex1320,
Tilex1321,
Tilex1322,
Tilex1323,
Tilex1324,
Tilex1325,
Tilex1326,
Tilex1327,
Tilex1328,
Tilex1329,
Tilex1330,
Tilex1331,
Tilex1332,
Tilex1333,
Tilex1334,
Tilex1335,
Tilex1336,
Tilex1337,
Tilex1338,
Tilex1339,
Tilex1340,
Tilex1341,
Tilex1342,
Tilex1343,
Tilex1344,
Tilex1345,
Tilex1346,
Tilex1347,
Tilex1348,
Tilex1349,
Tilex1350,
Tilex1351,
Tilex1352,
Tilex1353,
Tilex1354,
Tilex1355,
Tilex1356,
Tilex1357,
Tilex1358,
Tilex1359,
Tilex1360,
Tilex1361,
Tilex1362,
Tilex1363,
Tilex1364,
Tilex1365,
Tilex1366,
Tilex1367,
Tilex1368,
Tilex1369,
Tilex1370,
Tilex1371,
Tilex1372,
Tilex1373,
Tilex1374,
Tilex1375,
Tilex1376,
Tilex1377,
Tilex1378,
Tilex1379,
Tilex1380,
Tilex1381,
Tilex1382,
Tilex1383,
Tilex1384,
Tilex1385,
Tilex1386,
Tilex1387,
Tilex1388,
Tilex1389,
Tilex1390,
Tilex1391,
Tilex1392,
Tilex1393,
Tilex1394,
Tilex1395,
Tilex1396,
Tilex1397,
Tilex1398,
Tilex1399,
Tilex1400,
Tilex1401,
Tilex1402,
Tilex1403,
Tilex1404,
Tilex1405,
Tilex1406,
Tilex1407,
Tilex1408,
Tilex1409,
Tilex1410,
Tilex1411,
Tilex1412,
Tilex1413,
Tilex1414,
Tilex1415,
Tilex1416,
Tilex1417,
Tilex1418,
Tilex1419,
Tilex1420,
Tilex1421,
Tilex1422,
Tilex1423,
Tilex1424,
Tilex1425,
Tilex1426,
Tilex1427,
Tilex1428,
Tilex1429,
Tilex1430,
Tilex1431,
Tilex1432,
Tilex1433,
Tilex1434,
Tilex1435,
Tilex1436,
Tilex1437,
Tilex1438,
Tilex1439,
Tilex1440,
Tilex1441,
Tilex1442,
Tilex1443,
Tilex1444,
Tilex1445,
Tilex1446,
Tilex1447,
Tilex1448,
Tilex1449,
Tilex1450,
Tilex1451,
Tilex1452,
Tilex1453,
Tilex1454,
Tilex1455,
Tilex1456,
Tilex1457,
Tilex1458,
Tilex1459,
Tilex1460,
Tilex1461,
Tilex1462,
Tilex1463,
Tilex1464,
Tilex1465,
Tilex1466,
Tilex1467,
Tilex1468,
Tilex1469,
Tilex1470,
Tilex1471,
Tilex1472,
Tilex1473,
Tilex1474,
Tilex1475,
Tilex1476,
Tilex1477,
Tilex1478,
Tilex1479,
Tilex1480,
Tilex1481,
Tilex1482,
Tilex1483,
Tilex1484,
Tilex1485,
Tilex1486,
Tilex1487,
Tilex1488,
Tilex1489,
Tilex1490,
Tilex1491,
Tilex1492,
Tilex1493,
Tilex1494,
Tilex1495,
Tilex1496,
Tilex1497,
Tilex1498,
Tilex1499,
Tilex1500,
Tilex1501,
Tilex1502,
Tilex1503,
Tilex1504,
Tilex1505,
Tilex1506,
Tilex1507,
Tilex1508,
Tilex1509,
Tilex1510,
Tilex1511,
Tilex1512,
Tilex1513,
Tilex1514,
Tilex1515,
Tilex1516,
Tilex1517,
Tilex1518,
Tilex1519,
Tilex1520,
Tilex1521,
Tilex1522,
Tilex1523,
Tilex1524,
Tilex1525,
Tilex1526,
Tilex1527,
Tilex1528,
Tilex1529,
Tilex1530,
Tilex1531,
Tilex1532,
Tilex1533,
Tilex1534,
Tilex1535,
Tilex1536,
Tilex1537,
Tilex1538,
Tilex1539,
Tilex1540,
Tilex1541,
Tilex1542,
Tilex1543,
Tilex1544,
Tilex1545,
Tilex1546,
Tilex1547,
Tilex1548,
Tilex1549,
Tilex1550,
Tilex1551,
Tilex1552,
Tilex1553,
Tilex1554,
Tilex1555,
Tilex1556,
Tilex1557,
Tilex1558,
Tilex1559,
Tilex1560,
Tilex1561,
Tilex1562,
Tilex1563,
Tilex1564,
Tilex1565,
Tilex1566,
Tilex1567,
Tilex1568,
Tilex1569,
Tilex1570,
Tilex1571,
Tilex1572,
Tilex1573,
Tilex1574,
Tilex1575,
Tilex1576,
Tilex1577,
Tilex1578,
Tilex1579,
Tilex1580,
Tilex1581,
Tilex1582,
Tilex1583,
Tilex1584,
Tilex1585,
Tilex1586,
Tilex1587,
Tilex1588,
Tilex1589,
Tilex1590,
Tilex1591,
Tilex1592,
Tilex1593,
Tilex1594,
Tilex1595,
Tilex1596,
Tilex1597,
Tilex1598,
Tilex1599,
Tilex1600,
Tilex1601,
Tilex1602,
Tilex1603,
Tilex1604,
Tilex1605,
Tilex1606,
Tilex1607,
Tilex1608,
Tilex1609,
Tilex1610,
Tilex1611,
Tilex1612,
Tilex1613,
Tilex1614,
Tilex1615,
Tilex1616,
Tilex1617,
Tilex1618,
Tilex1619,
Tilex1620,
Tilex1621,
Tilex1622,
Tilex1623,
Tilex1624,
Tilex1625,
Tilex1626,
Tilex1627,
Tilex1628,
Tilex1629,
Tilex1630,
Tilex1631,
Tilex1632,
Tilex1633,
Tilex1634,
Tilex1635,
Tilex1636,
Tilex1637,
Tilex1638,
Tilex1639,
Tilex1640,
Tilex1641,
Tilex1642,
Tilex1643,
Tilex1644,
Tilex1645,
Tilex1646,
Tilex1647,
Tilex1648,
Tilex1649,


}
#[derive(Resource)]
pub struct Map{
    pub width:i32,
    pub height:i32,
    pub tiles:Vec<TileType>,
    pub occupation: Vec<Option<Entity>>,
    pub player_start:Position,
    pub mob_starts:Vec<(Position,Mob)>,
    pub spawn_templates:Option<SpawnTemplates>,
   // pub mob_positions:Vec<Position>,
    pub file_name:String,
}
impl Map{
    pub fn new(width:i32,height:i32) -> Self{
        Self{
            width,
            height,
            tiles:vec![TileType::Glass1;(width*height) as usize],
            occupation:vec![None;(width*height) as usize],
            player_start:Position::new(1,2),
            mob_starts:Vec::new(),
           // mob_positions:Vec::new(),
            file_name:String::new(),
            spawn_templates:None,
        }
    }

    pub fn in_bounds<T: Into<Position>> (&self, position: T) -> bool {
        let position = position.into();
        position.x >= 0 && position.x < self.width as i32
            && position.y >= 0 && position.y < self.height as i32
    }
    pub fn map_idx(&self,x: i32, y: i32) -> usize {
        ((y*self.width) + x) as usize
    }
    pub fn is_tile_occupied<T: Into<Position>> (&self, position: T) -> bool {
        let position = position.into();
        self.in_bounds(position)
            && self.occupation[self.map_idx(position.x, position.y)] == None
    }
    pub fn try_idx(&self,position:Position)->Option<usize>{
        if self.in_bounds(position){
            Some(self.map_idx(position.x,position.y))
        }else{
            None
        }
    }
    pub fn testmap() -> Self{
        let my_tile:Vec<TileType> =  vec![TileType::GlassRock,TileType::GlassRock,TileType::GlassRock,TileType::GlassRock,TileType::GlassRock,
                                          TileType::GlassRock,TileType::Glass1,TileType::Glass1,TileType::Glass1,TileType::GlassRock,
                                          TileType::GlassRock,TileType::Glass1,TileType::Glass1,TileType::Glass1,TileType::GlassRock,
                                          TileType::GlassRock,TileType::Glass1,TileType::Glass1,TileType::Glass1,TileType::GlassRock,
                                          TileType::GlassRock,TileType::GlassRock,TileType::GlassRock,TileType::GlassRock,TileType::GlassRock];
        Self{
            width:5,
            height:5,
            tiles:my_tile,
            occupation:vec![None;25],
            player_start:Position::new(2,1),
            mob_starts:vec![(Position::new(2,3),Mob{mob_type:MobType::Neutral,index:5}),
                            (Position::new(3,3),Mob{mob_type:MobType::Neutral,index:6}),
                            (Position::new(2,2),Mob{mob_type:MobType::Neutral,index:7}),
                            (Position::new(3,2),Mob{mob_type:MobType::Neutral,index:8})
                            ],
            //mob_positions:vec![Position::new(2,3),Position::new(3,3)],
            file_name:String::from("test"),
            spawn_templates:None,
        }
    }
    pub fn can_enter_tile<T:Into<Position>>(&self,position: T,tile_status_list:&Res<TileStatusList>)->bool{
        let position = position.into();
        if self.in_bounds(position){
            let tile = self.tiles[self.map_idx(position.x, position.y)];
            let tile_status = tile_status_list.tile_status_list.get(&(tile as usize));
            (if let Some(tile_status) = tile_status{
                tile_status.can_pass
            }else{
                true
            })&&self.occupation[self.map_idx(position.x, position.y)] == None
        } else{
            false
        }
    }

    pub fn entity_occupy_tile(&mut self,entity:Entity,position:Position){
        if let Some(idx) = self.try_idx(position){
            self.occupation[idx] = Some(entity);
        }
    }
    pub fn entities_occupy_tiles(&mut self,entities:Vec<Entity>,positions:Vec<Position>){
        for (entity,position) in entities.iter().zip(positions.iter()){
            self.entity_occupy_tile(*entity,*position);
        }
    }
    pub fn move_entity_occupation(&mut self, entity: Entity, old_p: Position, new_p: Position) {
        let old_idx = self.map_idx(old_p.x, old_p.y);
        let new_idx = self.map_idx(new_p.x, new_p.y);
        self.occupation[old_idx] = None;
        self.occupation[new_idx] = Some(entity);
    } 
    pub fn free_occupy_tile(&mut self,position:Position){
        if let Some(idx) = self.try_idx(position){
            self.occupation[idx] = None;
        }
    }
    pub fn load(filename:&str)->Self{
        let mut loader = Loader::new();
        let map = loader.load_tmx_map(format!("assets/map/{}.tmx",filename));
        //println!("map:{:?}",map);
       

        if let Ok(map) = map{
            let mut my_tile:Vec<TileType> = Vec::new();
            let layer = map.get_layer(0).unwrap().as_tile_layer().unwrap();
            if let tiled::TileLayer::Finite(tiles) = layer{
                for y in (0..layer.height().unwrap()).rev(){
                    for x in (0..layer.width().unwrap()){
                        if let Some(t) = tiles.get_tile(x as i32,y as i32) {
                            my_tile.push(FromPrimitive::from_u32(t.id()).unwrap());
                        }
                    }
                }
            }
            
            let mut item_mob_tiles:Vec<SpawnTemplate> = Vec::new();
            let item_mob_layer = map.get_layer(1);
            
            let mut spawn_templates = None;
            if let Some(item_mob_layer) = item_mob_layer{
                
                if let Some(item_mob_layer) = item_mob_layer.as_tile_layer(){
                    
                    for y in (0..layer.height().unwrap()){
                        for x in (0..layer.width().unwrap()){
                            if let Some(t) = item_mob_layer.get_tile(x as i32,y as i32) {
                                let id = t.id();
                                println!("my_tile:{:?}",id);
                                //MOB出力
                                let mob_type = MobType::Neutral;
                                
                                let mut spawn_template = SpawnTemplate{
                                    mob_type,
                                    probability:100,
                                    name:format!("{:?}{}",mob_type,id),
                                    position:Some(Position::new(x as i32,(layer.height().unwrap() -y -1 ) as i32)),
                                    index:id as usize,
                                    ..default()
                                };
                                if id >= GRID_NUM{
                                    spawn_template.hp = Some(10);
                                }else{
                                    spawn_template.mob_type = MobType::Item;
                                }
                                item_mob_tiles.push(spawn_template);
                            }
                        }
                    }
                    let template = SpawnTemplates::load_by_vec(item_mob_tiles);
                    spawn_templates = Some(template);
                }
            }
            Self{
                width:map.width as i32,
                height:map.height as i32,
                tiles:my_tile,
                spawn_templates:spawn_templates,
                occupation:vec![None;(map.width*map.height) as usize],
                player_start:Position::new(15,15),
                mob_starts:Vec::new(),
                //mob_positions:Vec::new(),
                file_name:filename.to_string(),

            }

           

        }else{
            panic!("Map not found");
        }
        
    }   

}
pub fn spawn_map_tiles(
    map: Res<Map>,
    mut commands: Commands,
    atlas: Res<MapAsset>,
){
    for y in 0..map.height{
        for x in 0..map.width{
            let tile = map.tiles[map.map_idx(x,y)];
            let position = Position::new(x,y);
            let mut sprite = TextureAtlasSprite::new(tile as usize);
            sprite.custom_size = Some(Vec2::new(TILE_SIZE, TILE_SIZE));
            //sprite.color = Color::OLIVE;
            commands.spawn((
                SpriteSheetBundle{
                    sprite: sprite,
                    texture_atlas: atlas.atlas.clone(),
                    transform: position.into(),
                    ..Default::default()
                },
            ));
        }
    }
}

pub fn spawn_map_mob_items(
    mut map:ResMut<Map>,
    mut commands: Commands,
    atlas: Res<MapAsset>,
    current_time:Res<CurrentTime>,
    mob_status_list:Res<MobStatusList>,
){
    let spawn_templates = map.spawn_templates.clone();
    if let Some(spawn_templates) = spawn_templates{
        spawn_templates.spawn_entities(&mut commands, atlas, &mut map,current_time,&mob_status_list);
    }
}